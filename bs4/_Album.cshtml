@inherits Custom.Hybrid.Razor12
@using ToSic.Razor.Blade;
@{
  // Basics / Preparation
  var helpers = CreateInstance("Helpers.cs");
  var page = GetService<ToSic.Sxc.Web.IPageService>();  // Service to set titles etc. on the page

  // Get page Parameters (works on Dnn & Oqtane)
  var albumInUrl = CmsContext.Page.Parameters["Album"];
  var isDetailViewOfAlbum = Text.Has(albumInUrl);
  
  // If album QueryString is specified, take album from QueryString, else take "current" album
  var album = isDetailViewOfAlbum 
    ? AsList(Data).FirstOrDefault(a => a.Path == albumInUrl) 
    : Content;
  
  // If no album found, show error and stop processing
  if (album == null) {
    <h1>@Resources.AlbumNotFound</h1>
    <div>@Html.Raw(Resources.AlbumNotFoundText)</div>
    <a href="@Tags.SafeUrl(Link.To())" class="btn btn-outline-primary btn-sm">@Resources.BackToOverview</a>

    page.SetHttpStatus(404);
    return;
  }

  // Set the title
  page.SetTitle(album.Title + " | ");       // will prepend to the existing title
  // page.SetTitle(album.Title, "[album]"); // this would replace a placeholder [album] in the title with the title

  // Determine if we should show as Masonry
  var albumTiling = Text.Has(album.Presentation.TileStructure)
    ? album.Presentation.TileStructure
    : CmsContext.View.Identifier;
  var useMasonry = albumTiling == "masonry";

  // Determine the widths of each part, based on 12 Bootstrap Cols
  var imgResizeFactor = (float)(useMasonry ? 4 : 3) / 12;
  var thumbHeight = (useMasonry ? (int?)0 : null); // if Masonry it must be 0 (no height), otherwise null = default

  // Get url params for re-use below. 
  // Uses global Image Settings http://r.2sxc.org/settings
  // and new Link.Image helper
  var thumbnailParams = Link.Image("", Settings.Images.Content, factor: imgResizeFactor, height: thumbHeight);
  var lightboxParams = Link.Image("", Settings.Images.Lightbox);
}
@* Hide the side navigation if the view is used as detail view *@
@if (isDetailViewOfAlbum) {
  <style>.ly-col-leftpane { display: none; }</style>
}

<div @Edit.TagToolbar(album)>
  @* Display Album Title or information that title is hidden *@
  @Html.Partial("_Part Title Description.cshtml", new { album = album })

  @* Display the images *@
  <div class="ga-wrapper">
    @if(useMasonry) { @Tag.Div().Class("ga-masonry").TagStart }
    else { @Tag.Div().Class("row mb-4").TagStart }

      @foreach (var pic in helpers.GetImagesSorted(album)) {
        var picCaption = "";
        if (Content.Presentation.ShowImageTitle && Text.Has(pic.Metadata.Title)) {
          picCaption = ("<h6>" + Tags.Strip(pic.Metadata.Title) + "</h6><p>" + Tags.Strip(pic.Metadata.Description) + "</p>")
            .Replace("\"", "&quot;");
        }
        var thumbnailUrl = Tags.SafeUrl(pic.Url + thumbnailParams);
        var lightboxUrl = Tags.SafeUrl(pic.Url + lightboxParams);
        var metaToolbarConfig = new [] {
            "toolbar=empty",
            "metadata?entityId=" + pic.Metadata.EntityId + "&contentType=ImageMetadata&for=file:" + pic.FileId
        };

        if(!useMasonry) {
          @Tag.Div().Class("ga-tiles col-12 col-sm-6 col-md-4 col-lg-3 mb-4").TagStart }
          <div class="ga-image" @Edit.TagToolbar(toolbar: metaToolbarConfig)>
            <figure>
              <a class="ga-fancybox" href='@lightboxUrl' data-app-gallery-fancybox="@CmsContext.Module.Id" data-caption="@picCaption">
               
                  <div class="overlay d-flex align-items-end">
                    @if(Text.Has(pic.Metadata.Title)) {
                      <div class="small text-white p-1 px-lg-2">
                        @pic.Metadata.Title
                        </div>
                    }
                  </div>
                  <img loading="lazy" class="img-fluid" src='@thumbnailUrl' alt="@pic.Metadata.Title" />
              </a>
            </figure>
          </div>
        if(!useMasonry) { @Tag.Div().TagEnd}
      }
    @if(useMasonry) { @Tag.Div().TagEnd }
    else { @Tag.Div().TagEnd }
</div>

@* Show back button if the view is used as detail view *@
@if(isDetailViewOfAlbum) {
  <a href="@Tags.SafeUrl(Link.To())" class="btn btn-outline-primary btn-sm">@Resources.BackToOverview</a>
}

@Html.Partial("_Part WebResources.cshtml", new { scripts = true })


<script>
</script>